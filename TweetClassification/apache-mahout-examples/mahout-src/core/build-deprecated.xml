<?xml version="1.0"?>

<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 -->

<project name="mahout-core" default="dist-jar" basedir=".">
    <import file="../common-build-deprecated.xml"/>
  <property file="build.properties" />
  <property name="Name" value="Mahout" />




  <!-- 3rd party libraries for compilation -->
  <property name="core-lib" value="lib" />
  

  <!-- mahout source files -->
  <property name="src" value="src" />



  <!-- Example directory -->
  <property name="example" value="example" />

  <property name="fullname" value="apache-${ant.project.name}"/>
  <property name="fullnamever" value="apache-${ant.project.name}-${version}"/>

  


  <!-- JUnit properties -->

  <property name="junit.excludes" value="**/MatrixTest.java, **/DefaultDistanceMeasureTest.java, **/DefaultWeightedDistanceMeasureTest.java"/>


  <!-- The compilation classpath -->
  <path id="compile.classpath">
    <fileset dir="${shared-lib}">
      <include name="*.jar" />
      <exclude name="junit*.jar"/>
    </fileset>
    <fileset dir="${core-lib}">
      <include name="*.jar" />
    </fileset>
  </path>
  <path id="test.classpath">
    <path refid="junit-path"/>
    <path refid="compile.classpath"/>
    <pathelement location="${dest}/test-classes"/>
    <pathelement location="${dest}/classes"/>
  </path>
  <path id="examples-test.classpath">
    <path refid="test.classpath"/>
    <pathelement location="${dest}/examples-test-classes"/>
    <pathelement location="${dest}/examples"/>
  </path>


  <path id="junit.classpath">
    <path refid="junit-path"/>
    <pathelement location="${dest}/test-classes"/>
    <pathelement location="${dest}/classes"/>
    <path refid="compile.classpath"/>
    <pathelement path="${java.class.path}"/>
  </path>
  <path id="junit.examples.classpath">
    <path refid="junit.classpath"/>
    <pathelement location="${dest}/examples-test-classes"/>
    <pathelement location="${dest}/examples"/>
  </path>


  <!-- Default target: usage.  Prints out instructions. -->
  <target name="usage"
          description="Prints out instructions">
    <echo message="Welcome to the Mahout project!" />
    <!--<echo message="Use 'ant example' to create a runnable example configuration." />-->
    <echo message="And for developers:"/>
    <echo message="Use 'ant clean' to clean compiled files." />
    <echo message="Use 'ant compile' to compile the source code." />
    <!--<echo message="Use 'ant dist' to build the project WAR and JAR files." />
    <echo message="Use 'ant package' to build a .zip and .tgz for distribution." />-->
    <echo message="Use 'ant test' to run unit tests." />
  </target>

  <!-- Clean: cleans compiled files and other temporary artifacts. -->
  <target name="clean"
          description="Cleans compiled files and other temporary artifacts.">
    <delete dir="${dest}" />
    <delete dir="${dist}" />
  </target>


  <!-- ========================================================================= -->
  <!-- ===================== COMPILATION-RELATED TASKS ========================= -->
  <!-- ========================================================================= -->

  <!-- Compile the project. -->
  <target name="compile"
          description="Compile the source code."
          >
    <mahout-javac destdir="${dest}/classes"
                classpathref="compile.classpath">
      <src path="${src}/main/java" />
    </mahout-javac>
  </target>

  <target name="javadoc" depends="compile"
          description="Generates javadoc documentation.">

    <mkdir dir="${build.javadoc}"/>

    <path id="javadoc.classpath">
       <path refid="compile.classpath"/>
    </path>

    <javadoc
      destdir="${build.javadoc}"
      author="true"
      version="true"
      failonerror="true"
      use="true"
      encoding="utf8"
      access="${javadoc.access}"
      overview="./src/main/java/overview.html"
      windowtitle="${Name} ${version} API"
      doctitle="${Name} ${version} API (${specversion})"
      bottom="Copyright &amp;copy; ${javadoc.years} The Apache Software Foundation"
      >
        <packageset dir="${src}/main/java"/>
        <link href="${javadoc.link.java}"/>
        <link href="${javadoc.link.junit}"/>
        <classpath refid="javadoc.classpath"/>
    </javadoc>
  </target>

  <target name="compile-test" depends="compile">
    <mahout-javac

      destdir="${dest}/test-classes/" classpathref="test.classpath">
      <src path="${src}/test/java"/>
      </mahout-javac>

    <!-- Copy any data files present to the classpath -->
    <copy todir="${dest}/test-classes">
      <fileset dir="src/test/java" excludes="**/*.java"/>
    </copy>

    <!-- Copy any data files present to the classpath -->
    <copy todir="${dest}/test-classes">
      <fileset dir="src/test/resources"/>
    </copy>

  </target>


  <target name="compile-examples-test" depends="compile-test">
    <mahout-javac
      destdir="${dest}/examples-test-classes/" classpathref="examples-test.classpath">
      <src path="${src}/test/examples"/>
      </mahout-javac>

    <!-- Copy any data files present to the classpath -->
    <copy todir="${dest}/examples-test-classes">
      <fileset dir="src/test/examples" excludes="**/*.java"/>
    </copy>

    <!-- Copy any data files present to the classpath -->
    <copy todir="${dest}/examples-test-classes">
      <fileset dir="src/test/resources"/>
    </copy>
  	
  </target>


  
  <target name="test" depends="compile-test, dist-jar" description="Runs unit tests">
    <mkdir dir="${junit.output.dir}"/>
    <junit printsummary="off" haltonfailure="no"
      errorProperty="tests.failed" failureProperty="tests.failed" maxmemory="${memory}">
      <classpath refid="junit.classpath"/>
      <assertions>
        <enable package="org.apache.mahout"/>
      </assertions>

      <!-- allow tests to control debug prints -->
      <sysproperty key="tests.verbose" value="${tests.verbose}"/>

      <!-- TODO: create propertyset for test properties, so each project can have its own set -->
      <sysproperty key="dataDir" file="src/test"/>
      <sysproperty key="tempDir" file="${dest}/test"/>
      <sysproperty key="java.io.tmpdir" file="${dest}/test"/>


      <formatter type="xml"/>
      <formatter type="brief" usefile="false"/>
      <batchtest fork="yes" todir="${junit.output.dir}" unless="testcase">
        <fileset dir="${src}/test/java" includes="${junit.includes}" excludes="${junit.excludes}"/>
      </batchtest>
      <batchtest fork="yes" todir="${junit.output.dir}" if="testcase">
        <fileset dir="${src}/test/java" includes="**/${testcase}.java"/>
      </batchtest>
    </junit>
    <junitreport todir="${junit.output.dir}">
      <fileset dir="${junit.output.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${junit.output.dir}/html"/>
    </junitreport>

    <!-- create this file, then if we don't fail, delete it -->
    <!-- this meme makes it easy to tell if contribs have failed later -->
    <echo file="${dest}/junitfailed.flag">MAYBE</echo>
    <fail if="tests.failed">Tests failed!</fail>
    <!-- life would be easier if echo had an 'if' attribute like fail -->
    <delete file="${dest}/junitfailed.flag" />

  </target>

  <target name="examples-test" depends="compile-examples-test, dist-jar" description="Runs unit tests for the examples">
    <mkdir dir="${junit.output.dir}/examples"/>
    <junit printsummary="off" haltonfailure="no"
      errorProperty="tests.failed" failureProperty="tests.failed" maxmemory="256m">
      <classpath refid="junit.examples.classpath"/>
      <assertions>
        <enable package="org.apache.mahout"/>
      </assertions>

      <!-- allow tests to control debug prints -->
      <sysproperty key="tests.verbose" value="${tests.verbose}"/>

      <!-- TODO: create propertyset for test properties, so each project can have its own set -->
      <sysproperty key="dataDir" file="src/test"/>
      <sysproperty key="tempDir" file="${dest}/test"/>
      <sysproperty key="java.io.tmpdir" file="${dest}/test"/>

      <formatter type="xml"/>
      <formatter type="brief" usefile="false"/>
      <batchtest fork="yes" todir="${junit.output.dir}/examples" unless="testcase">
        <fileset dir="${src}/test/examples" includes="${junit.includes}" excludes="${junit.excludes}"/>
      </batchtest>
      <batchtest fork="yes" todir="${junit.output.dir}/examples" if="testcase">
        <fileset dir="${src}/test/examples" includes="**/${testcase}.java"/>
      </batchtest>
    </junit>
    <junitreport todir="${junit.output.dir}/examples">
      <fileset dir="${junit.output.dir}/examples">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${junit.output.dir}/examples/html"/>
    </junitreport>

    <fail if="tests.failed">Tests failed!</fail>
  </target>

  <target name="job" depends="compile">
    <jar jarfile="${dest}/${fullnamever}.job">
      <zipfileset dir="${dest}/classes"/>
      <zipfileset dir="${core-lib}" prefix="lib"
                  includes="**/*.jar" excludes="hadoop-*.jar"/>
      <zipfileset dir="${shared-lib}" prefix="lib"
                  includes="**/*.jar"/>
    </jar>
  </target>
  

  <target name="dist-jar"
          description="Creates the Mahout JAR Distribution file."
          depends="compile, make-manifest">
    <mkdir dir="${dist}" />
    <mahout-jar
         destfile="${dist}/${fullnamever}.jar"
         basedir="${dest}/classes" />

  </target>

  

</project>
